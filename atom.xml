<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Paradise]]></title>
  <subtitle><![CDATA[Maybe it's the perfect day.]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2015-05-23T14:36:36.282Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[smilesometimes]]></name>
    <email><![CDATA[591369764@qq.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[git学习笔记]]></title>
    <link href="http://yoursite.com/2015/05/23/git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2015/05/23/git学习笔记/</id>
    <published>2015-05-23T14:16:31.000Z</published>
    <updated>2015-05-23T14:36:10.000Z</updated>
    <content type="html"><![CDATA[<p>做下git笔记@^@，after 看了《<em>程序员修炼三部曲 第一步</em> 使用git》<a id="more"></a>。<br><em>环境: window7 64位</em></p>
<hr>
<h1 id="1_git安装与设置"><strong>1 git安装与设置</strong></h1>
<h2 id="1-1_安装">1.1 安装</h2>
<p>下载<a href="https://help.github.com/articles/set-up-git/#platform-windows" target="_blank" rel="external">github for windows</a> 。安装完成会提供一个github客户端和一个git shell。<br>linux和mac该网址也有介绍。</p>
<h2 id="1-2_设置">1.2 设置</h2>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">git config --<span class="keyword">global</span> user.name “AAAAA”         <span class="comment">//账户名,github账户名</span></div><div class="line">git config --<span class="keyword">global</span> user.email “AAAAA<span class="variable">@QQ</span>.COM” <span class="comment">//邮件地址，方便联系修改者</span></div><div class="line">git config --<span class="keyword">global</span> <span class="keyword">color</span>.ui <span class="string">"auto"</span>           <span class="comment">//不同颜色显示修改内容，也可设置为false（没有颜色显示） </span></div><div class="line">git config --<span class="keyword">global</span> --list                  <span class="comment">//列出所有设置的全局变量</span></div><div class="line">git <span class="keyword">help</span> &lt;command&gt;                          <span class="comment">//命令帮助</span></div></pre></td></tr></table></figure>

<h2 id="1-3_图形界面">1.3 图形界面</h2>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//加&符号使图形窗口在新进程运行，不会让shell等待。</span></div><div class="line">git gui&     <span class="comment">//git 图形界面</span></div><div class="line">gitk&       <span class="comment">//显示当前分支的历史记录，--all显示所有分支</span></div></pre></td></tr></table></figure>



<p>哈@-@，gitk用着还是特别不错的，如果黑框框看烦了的话。</p>
<hr>
<h1 id="2_常用操作"><strong>2 常用操作</strong></h1>
<h2 id="2-1_基本操作">2.1 基本操作</h2>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">cd &lt;项目目录&gt;</div><div class="line">git init                <span class="comment"> //初始化git，建立版本库</span></div><div class="line">git status              <span class="comment"> //查看状态，是否有文件改动</span></div><div class="line">git <span class="built_in">add</span> index.html      <span class="comment"> //暂存 index.html</span></div><div class="line">git commit -m <span class="string">"留言"</span>    <span class="comment"> //提交暂存</span></div><div class="line">git <span class="built_in">add</span> -i              <span class="comment"> //交互模式暂存新文件</span></div><div class="line">git commit -m “留言” -<span class="operator">a</span> <span class="comment"> //提交所有修改</span></div><div class="line">git <span class="built_in">log</span> -n               <span class="comment"> //查看前n条的提交</span></div><div class="line">git <span class="built_in">log</span> <span class="comment">--pretty=oneline  //一行显示提交</span></div><div class="line">git <span class="built_in">log</span> -p               <span class="comment"> //显示详细提交（包括修改）</span></div><div class="line">git blame hello.html     <span class="comment"> //跟踪hello.html文件</span></div></pre></td></tr></table></figure>

<h2 id="2-2_查看修改">2.2 查看修改</h2>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git diff            <span class="comment">//比较目录与暂存的区别</span></div><div class="line">git diff --cached   <span class="comment">//比较暂存区和版本库的区别</span></div><div class="line">git diff HEAD       <span class="comment">//（暂存和未暂存）和版本库的区别</span></div><div class="line">git diff --stat <span class="number">1.0</span> HEAD  <span class="comment">// 很酷的参数--stat 统计1.0到HEAD的代码改动</span></div></pre></td></tr></table></figure>

<h2 id="2-3_分支">2.3 分支</h2>
<p>功能分支是分支的一种用法，可以在已有分支上创建新的分支，用于新功能开发或BUG修复，最后合并。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">git branch RB_1<span class="number">.0</span> master  <span class="comment">//基于master分支创建RB_1.0分支</span></div><div class="line">git checkout RB_1<span class="number">.0</span>       <span class="comment">//切换到分支RB_1.0</span></div><div class="line">git <span class="built_in">tag</span> <span class="number">1.0</span> RB_1<span class="number">.0</span>        <span class="comment">//为RB_1.0分支末梢打上1.0标签</span></div><div class="line">git checkout <span class="attribute">-b</span> <span class="subst">&lt;</span>新分支<span class="subst">&gt;</span> <span class="subst">&lt;</span>父分支<span class="subst">&gt;</span> <span class="comment">//创建并检出新分支</span></div><div class="line">git branch <span class="subst">&lt;</span>新分支<span class="subst">&gt;</span> <span class="number">1.0</span>   <span class="comment">//在1.0标签处创建新分支</span></div><div class="line">git branch <span class="attribute">-m</span> <span class="subst">&lt;</span>新分支<span class="subst">&gt;</span> <span class="subst">&lt;</span>旧分支<span class="subst">&gt;</span> <span class="comment">//分支重命名</span></div><div class="line">git branch <span class="attribute">-d</span>/D          <span class="comment">//删除分支，大写D强制删除</span></div><div class="line">git revert               <span class="comment">//创建一个反向的新提交</span></div></pre></td></tr></table></figure>

<hr>
<h1 id="3_合并"><strong>3 合并</strong></h1>
<h2 id="3-1_自动合并">3.1 自动合并</h2>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">merge</span> &lt;分支&gt;         <span class="comment"> //直接合并</span></div><div class="line">git <span class="built_in">merge</span> <span class="comment">--squash &lt;分支&gt; //压合合并，分支所有提交压合成一个提交。</span></div><div class="line">git <span class="built_in">merge</span> cherry-pick <span class="number">321</span>d76f<span class="comment"> //挑选合并</span></div></pre></td></tr></table></figure>

<h2 id="3-2_冲突处理，图形化合并工具">3.2 冲突处理，图形化合并工具</h2>
<p>git不能自动合并时，会产生冲突(conflict)，需要手工编辑。windows下有kdiff3合并工具。windows用户下载安装kdiff3.</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//配置</span></div><div class="line">git config --<span class="keyword">global</span> merge.tool kdiff3</div><div class="line"><span class="comment">//设置你的安装目录</span></div><div class="line">git config --<span class="keyword">global</span> mergetool.kdiff3.path <span class="string">"D:\Program Files\KDiff3\kdiff3.exe"</span>  </div><div class="line"><span class="comment">//git merge 产生冲突后，运行以下命令</span></div><div class="line">git mergetool       <span class="comment">//发生冲突时，调用工具进行合并</span></div></pre></td></tr></table></figure>

<hr>
<h1 id="4_远程操作"><strong>4 远程操作</strong></h1>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">git <span class="keyword">clone</span> https:<span class="comment">//github.com/smilesometimes/mysite_test.git //克隆到本地</span></div><div class="line">git branch -r   <span class="comment">//列出远程分支 本地分支追随origin/master</span></div><div class="line">git fetch       <span class="comment">//取来，用远程版本库更新origin         </span></div><div class="line">git pull        <span class="comment">//取来，并合并</span></div><div class="line">git push        <span class="comment">//本地更改</span></div></pre></td></tr></table></figure>

<h2 id="4-1_github">4.1 github</h2>
<p>github可以为每个项目添加合作者，感兴趣的项目可以fork下来，提交代码。github 还可以为每个项目创建一个静态网页介绍。在gh-pages分支里。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>做下git笔记@^@，after 看了《<em>程序员修炼三部曲 第一步</em> 使用git》]]>
    
    </summary>
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
      <category term="git学习" scheme="http://yoursite.com/categories/git%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[自适应编码调制（AMC）]]></title>
    <link href="http://yoursite.com/2015/04/26/%E8%87%AA%E9%80%82%E5%BA%94%E7%BC%96%E7%A0%81%E8%B0%83%E5%88%B6%EF%BC%88AMC%EF%BC%89/"/>
    <id>http://yoursite.com/2015/04/26/自适应编码调制（AMC）/</id>
    <published>2015-04-26T14:15:14.000Z</published>
    <updated>2015-04-28T08:22:45.000Z</updated>
    <content type="html"><![CDATA[<h2 id="介绍">介绍</h2>
<hr>
<p><strong>自适应编码调制（Adaptive Modulation and Coding）</strong>技术是一种自适应技术，其能够根据信道状态自适应地<a id="more"></a>调节的传输参数是调制方式、信道编码方式和码率，系统根据当前的信道条件，在保证一定系统性能的前提下(如保证BLER小于某个门限值)来确定发射端各路数据流应使用的调制编码方式，从而<strong>提高系统的吞吐率</strong>。 </p>
<hr>
<h2 id="信道编码">信道编码</h2>
<p><img src="/imgs/amc/信道编码1.jpg" alt=""></p>
<blockquote>
<ul>
<li>由于信道有干扰和衰落，为增强抗干扰能力。要对传输的信息进行的纠检错、编码就是信道编码。</li>
<li>信道编码引入的冗余信息越多，纠错能力越强。</li>
<li>码率（R） = 输入比特数/输出比特数。 </li>
</ul>
</blockquote>
<h3 id="卷积码">卷积码</h3>
<p>卷积码一般表示为（n,k,m），k为信息组的长度，n表示每组信息对应输出的码长度，m表示与此前输出的m个信息关联。下图为R=1/2的卷积码（2,1,2）编码器框图m1,m2是移位寄存器，加号是模2加法器，如输入数据（8位）D=[11010000]此编码器就会输出码字（16位）C=[1101010010110000]<br><img src="/imgs/amc/编码.bmp" alt="卷积码"></p>
<h2 id="调制">调制</h2>
<p>调制一般是控制载波符号的初相和振幅，来表示不同的比特信息，不同的调制方式传输比特的速度是不一样的（高阶调制传的更快）。这里不做过多介绍。</p>
<blockquote>
<ul>
<li>Bpsk       一个符号可以表示一个比特。</li>
<li>Qpsk       一个符号可以表示两个比特。    </li>
<li>16QAM      一个符号可以表示四个比特。</li>
</ul>
</blockquote>
<h2 id="仿真">仿真</h2>
<blockquote>
<ul>
<li>仿真环境 ：matlab2014a win7 </li>
<li>编码：卷积码（R = 1/2 ,R = 1/3）</li>
<li>调制：（Bpsk，Qpsk，16QAM）</li>
<li>信道：高斯信道</li>
<li>块大小： 100比特</li>
</ul>
</blockquote>
<hr>
<p><img src="/imgs/amc/误码率.bmp" alt="误码率"><br>针对不同编码速率不同调制格式在五种情况下做了仿真，结果如上图。<br>其中R=1/3 Bpsk（绿色）调制的误码率最低，R=1/2 16QAM调制（蓝色）的误码率最高。比较可以看出，同样的信噪比条件下，高的编码速率和高阶调制抗干扰能力越弱，误码率越高。</p>
<hr>
<p>由于实际通信中编码以比特块进行的（比如统一以100个比特为一块进行编码传送），所以误块率更具有参考价值。<br><img src="/imgs/amc/误块率.bmp" alt="误块率"><br>同样，高阶调制，高的编码速率误块率越高，抗干扰能力差。</p>
<hr>
<p>在码元速率一样的前提下，以 r=1/3 Bpsk的最大传输速率为基准，计算每种方式的吞吐量（传输速率）<br><img src="/imgs/amc/吞吐率.bmp" alt="吞吐率"><br>可以看出，虽然R=1/2 16QAM调制（蓝色）的最大传输速率是R = 1/3 BPSK调制（绿色）的6倍，但是在信道条件不好（信噪比较低）的情况下，R = 1/3 BPSK调制的吞吐量还是比R=1/2 16QAM调制的高的。</p>
<h2 id="结论">结论</h2>
<p>为提高信息传输速率，可以检测信道的条件，利用amc技术，在信道条件好的情况下（小区中心），可以采用高的编码速率和高阶调制，得到高的传输速率。在信道条件差的情况下（小区边缘）采用低的编码速率和低阶调制方式，来保证通信质量。<br>ps:这个是我的宽带无线通信的大作业，希望好多年以后再看这篇文章我能看懂吧，虽然以后可能用不到学的通信知识了。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="介绍">介绍</h2>
<hr>
<p><strong>自适应编码调制（Adaptive Modulation and Coding）</strong>技术是一种自适应技术，其能够根据信道状态自适应地]]>
    
    </summary>
    
      <category term="通信" scheme="http://yoursite.com/tags/%E9%80%9A%E4%BF%A1/"/>
    
      <category term="通信" scheme="http://yoursite.com/categories/%E9%80%9A%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[python机器学习环境winpython安装]]></title>
    <link href="http://yoursite.com/2015/04/18/python%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83winpython%E5%AE%89%E8%A3%85/"/>
    <id>http://yoursite.com/2015/04/18/python机器学习环境winpython安装/</id>
    <published>2015-04-18T14:11:26.000Z</published>
    <updated>2015-04-27T01:03:11.000Z</updated>
    <content type="html"><![CDATA[<p>系统：win7 64位<a id="more"></a> </p>
<hr>
<h2 id="1_Winpython介绍">1 Winpython介绍</h2>
<p>winpython是一种python的IDE。<br>它包含了常用的科学计算工具包numpy，scipy，sklearn，matplotlib，guiqwt等，省去了一个个安装的麻烦（尤其是windows下）。<br>winpython自带有spyder可以像matlab一样查看变量，步进调试程序。<br>推荐一个机器学习库sklearn（scikit-learn），看<a href="http://scikit-learn.org/stable/tutorial/index.html" target="_blank" rel="external">scikit-learn的官方文档</a>，还有好多<a href="http://scikit-learn.org/stable/auto_examples/index.html" target="_blank" rel="external">官方例子</a>，就可以很好的学习机器学习了。  </p>
<hr>
<h2 id="2_Winpython安装">2 Winpython安装</h2>
<h3 id="2-1下载">2.1下载</h3>
<p>下载地址（大概200m）：<a href="http://www.softpedia.com/get/Programming/Coding-languages-Compilers/WinPython.shtml" target="_blank" rel="external">http://www.softpedia.com/get/Programming/Coding-languages-Compilers/WinPython.shtml</a><br>有python2.7，3.3和3.4的。（我选的3.4 64位的）  </p>
<h3 id="2-2安装">2.2安装</h3>
<p>双击WinPython-64bit-3.4.3.2.exe 安装。<br>C盘的剩余空间要大于1.3g，貌似是先解压到c盘，再安装到用户选择的目录下的。  </p>
<hr>
<h2 id="3_Winpython使用">3 Winpython使用</h2>
<p>双击文件夹下的spyder.exe（文件件下还有许多其他好用的工具）<br><img src="/imgs/machine/winpython1.JPG" alt="goeclise"><br>使用spyder就可以像matlab一样，进行计算调试程序了。右上角是变量空间。<br><img src="/imgs/machine/spyder.JPG" alt="go_hello"></p>
<h2 id="4_ubuntu">4 ubuntu</h2>
<p>ubuntu下软件中心中就可以下载到spyder2和spyder3而且ubuntu中安装python库比较方便,这里就不介绍了。  </p>
]]></content>
    <summary type="html">
    <![CDATA[<p>系统：win7 64位]]>
    
    </summary>
    
      <category term="环境搭建" scheme="http://yoursite.com/tags/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="机器学习" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Eclipse+GoEclipse插件go语言环境搭建]]></title>
    <link href="http://yoursite.com/2015/04/18/Eclipse-GoEclipse%E6%8F%92%E4%BB%B6go%E8%AF%AD%E8%A8%80%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://yoursite.com/2015/04/18/Eclipse-GoEclipse插件go语言环境搭建/</id>
    <published>2015-04-18T12:07:26.000Z</published>
    <updated>2015-04-27T01:03:40.000Z</updated>
    <content type="html"><![CDATA[<p>系统：ubuntu14.10 64位  <a id="more"></a></p>
<hr>
<h2 id="1_安装java">1 安装java</h2>
<p>在终端中输入以下命令</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt-get <span class="operator"><span class="keyword">install</span> <span class="keyword">default</span>-jre</span></div><div class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> <span class="keyword">default</span>-jdk</div></pre></td></tr></table></figure>

<p>参考 <a href="http://linux.cn/article-3792-1.html" target="_blank" rel="external">http://linux.cn/article-3792-1.html</a></p>
<h2 id="2_安装Eclipse">2 安装Eclipse</h2>
<p>参考 <a href="http://qkwu.net/hw/341.html" target="_blank" rel="external">http://qkwu.net/hw/341.html</a></p>
<h2 id="3_安装go语言">3 安装go语言</h2>
<p>在终端中输入 </p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">sudo</span> apt-get install golang</div></pre></td></tr></table></figure>

<p>参考 <a href="http://linux.cn/article-4854-weibo.html?fromuid=14763" target="_blank" rel="external">http://linux.cn/article-4854-weibo.html?fromuid=14763</a></p>
<h3 id="3-1做个测试编写heloworld-go看是否安装成功">3.1做个测试编写heloworld.go看是否安装成功</h3>
<p><img src="/imgs/go/gohelloworld.png" alt="go_hello"></p>
<h2 id="4_安装GoEclipse插件">4 安装GoEclipse插件</h2>
<p>点击<strong>eclipse-&gt;help-&gt;install new software</strong>点击<strong>add</strong>按钮<br>在框中的”Name”中输入”GoEclipse”(不包括引号)<br>在location中输入“<a href="https://github.com/GoClipse/releases/raw/master/”" target="_blank" rel="external">https://github.com/GoClipse/releases/raw/master/”</a><br>参考 <a href="http://www.oschina.net/question/88981_166406" target="_blank" rel="external">http://www.oschina.net/question/88981_166406</a></p>
<h3 id="图片如下一直点next就行，国内可能会有点慢,安装完重启eclispe">图片如下一直点next就行，国内可能会有点慢,安装完重启eclispe</h3>
<p>试了试goeclipse是安装成功了但是还没法运行改天再弄！！！！<br><img src="/imgs/go/goeclipse.png" alt="goeclise"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>系统：ubuntu14.10 64位  ]]>
    
    </summary>
    
      <category term="golang" scheme="http://yoursite.com/tags/golang/"/>
    
      <category term="环境搭建" scheme="http://yoursite.com/tags/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
      <category term="go语言" scheme="http://yoursite.com/categories/go%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Poetry Form Checker(诗歌形式检测小程序)]]></title>
    <link href="http://yoursite.com/2015/01/22/Poetry-Form-Checker-%E8%AF%97%E6%AD%8C%E5%BD%A2%E5%BC%8F%E6%A3%80%E6%B5%8B%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    <id>http://yoursite.com/2015/01/22/Poetry-Form-Checker-诗歌形式检测小程序/</id>
    <published>2015-01-22T03:31:28.000Z</published>
    <updated>2015-04-27T01:03:56.000Z</updated>
    <content type="html"><![CDATA[<p> Poetry Form Checker</p>
<p>Limericks, sonnets, haiku, and other forms of poetry <a id="more"></a> each follow prescribed patterns that give the number of lines, the number of syllables on each line, and a rhyme scheme. For example, limericks are five lines long; the first, second, and fifth lines each have eight syllables and rhyme with each other; and the third and fourth lines each have five syllables and rhyme with each other. (There are additional rules about the location and number of stressed vs. unstressed syllables, but we’ll ignore those rules for this assignment.)<a id="more"></a></p>
<p>Here is a stupendous work of limerick art:</p>
<pre><code>I wish I had thought <span class="keyword">of</span> a rhyme
Before I ran <span class="keyword">all</span> <span class="keyword">out</span> <span class="keyword">of</span> <span class="typename">time</span>!
I<span class="attribute">'ll</span> sit here instead,
A cloud <span class="keyword">on</span> my head
That rains <span class="attribute">'til</span> I<span class="attribute">'m</span> covered <span class="keyword">with</span> slime.
</code></pre><p>We’re sure that you’ve all kept yourselves awake wondering if there was a way to have a computer program check whether a poem is a limerick or if it follows some other poetry pattern. Here’s your chance to resolve the question!<br>The CMU Pronouncing Dictionary</p>
<p>The Carnegie Mellon University Pronouncing Dictionary describes how to pronounce words. Head there now and look up a couple of words; try searching for words like “Daniel”, “is”, and “goofy”, and see if you can interpret the results. Do contractions like “I’ll” (short for “I will”) and “we’ll” (short for “we will”) work? Try clicking the “Show Lexical Stress” checkbox too, and see how that changes the result.</p>
<p>Here is the output for “Daniel” (with “Show Lexical Stress” turned on): D AE1 N Y AH0 L. Each of the separate pieces describes a sound; these pieces are called phonemes. The phonemes are either vowel sounds or consonant sounds, and they are from a project called Arpabet that was created by the Advanced Research Projects Agency (ARPA) back in the 1970’s. The vowel phonemes all have a number after them; these indicate a level of stress. For example, in “Daniel”, the stress falls on the first vowel, AE1, and the second vowel is unstressed, AH0. The higher the level of stress, the larger the number after the vowel phoneme. In the CMU Pronouncing Dictionary, stress is always on a vowel sound.</p>
<p>Your program will read the file dictionary.txt, which is our version of the Pronouncing Dictionary. You must use this file, not any files from the CMU website. Take a look at our dictionary.txt file to see the format; notice that any line beginning with ;;; is a comment and not part of the dictionary.</p>
<p>Notice that the words in dictionary.txt are all uppercase and that they do not contain surrounding punctuation. When your program looks up a word, use the uppercase form, with no leading or trailing punctuation. Function clean_up in the starter code file poetry_functions.py will be be helpful here. </p>
]]></content>
    <summary type="html">
    <![CDATA[<p> Poetry Form Checker</p>
<p>Limericks, sonnets, haiku, and other forms of poetry <!--more--> each follow prescribed patterns that give the number of lines, the number of syllables on each line, and a rhyme scheme. For example, limericks are five lines long; the first, second, and fifth lines each have eight syllables and rhyme with each other; and the third and fourth lines each have five syllables and rhyme with each other. (There are additional rules about the location and number of stressed vs. unstressed syllables, but we’ll ignore those rules for this assignment.)]]>
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="小程序" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="python小程序" scheme="http://yoursite.com/categories/python%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[第一篇文章--哈哈]]></title>
    <link href="http://yoursite.com/2015/01/19/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0-%E5%93%88%E5%93%88/"/>
    <id>http://yoursite.com/2015/01/19/第一篇文章-哈哈/</id>
    <published>2015-01-19T08:28:00.000Z</published>
    <updated>2015-04-27T01:04:18.000Z</updated>
    <content type="html"><![CDATA[<hr>
<p>今天,2015年1月20日，终于实现了魂牵梦绕的的梦想，<a id="more"></a>在<strong><a href="http://zhanfang.github.io/" target="_blank" rel="external">詹神</a>和<a href="http://dby.github.io/" target="_blank" rel="external">杜少</a></strong>的帮助下（哈哈，特别感谢一下），用<strong>hexo</strong>在github上搭建了个博客!<br>我在coding网的主页：<a href="https://coding.net/u/paradise" target="_blank" rel="external">paradise</a>.<br>感谢<a href="http://zipperary.com/categories/hexo/" target="_blank" rel="external">Zippera’s blog的hexo教程</a>.</p>
<h2 id="1_一首小诗">1 一首小诗</h2>
<hr>
<p><strong>《豁然开朗》</strong> —<em>丰子恺</em><br>你若爱，<br>生活哪里都可爱；<br>你若恨，<br>生活哪里都可恨；<br>你若感恩，<br>处处可感恩；<br>你若成长，<br>事事可成长。<br>不是世界选择了你，<br>是你选择了这个世界。<br>既然无处可躲，<br>不如傻乐；<br>既然无处可逃，<br>不如喜悦；<br>既然没有净土，<br>不如静心；<br>既然没有如愿，<br>不如释然。</p>
<hr>
<h2 id="2_昨天">2 昨天</h2>
<hr>
<p>昨天，和昊哥和聪哥打了好多把dota，<strong>十几分钟被围着高地打，最后沙王和幽鬼竟然能翻盘，我必须提一下，真是珍贵的回忆！！！</strong>特别开心，游戏我总是删了又装，装了玩几次又删。真是希望以后我可以少打游戏，多学习，<strong>提升一下自身价值的稀有性，转化为好的价格</strong>，说俗一点就是<strong>提升逼格，赚钱养家</strong>。想在这个博客写点<strong>leetcode</strong>，将来希望找个好工作，能过上自己希望的生活吧。</p>
<p>哎，生活总有不如意，我也有好多需要妥协的地方，可是就像《时空恋旅人》电影里的一句歌词一样，<strong><em>Maybe it’s the perfect day.</em></strong>再不如意的一天，也可能是最好的一天，所以要<strong>乐观，要热爱生活</strong>。</p>
<p>祝好朋友们健康快乐。第一篇文章，哈哈，开心!</p>
]]></content>
    <summary type="html">
    <![CDATA[<hr>
<p>今天,2015年1月20日，终于实现了魂牵梦绕的的梦想，]]>
    
    </summary>
    
      <category term="生活感悟" scheme="http://yoursite.com/tags/%E7%94%9F%E6%B4%BB%E6%84%9F%E6%82%9F/"/>
    
      <category term="生活" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
</feed>
