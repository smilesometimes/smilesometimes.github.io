<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Paradise]]></title>
  <subtitle><![CDATA[Maybe it's the perfect day.]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2015-01-22T08:56:07.163Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[smilesometimes]]></name>
    <email><![CDATA[591369764@qq.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[test]]></title>
    <link href="http://yoursite.com/2015/01/22/test/"/>
    <id>http://yoursite.com/2015/01/22/test/</id>
    <published>2015-01-22T08:47:47.000Z</published>
    <updated>2015-01-22T08:49:01.000Z</updated>
    <content type="html"><![CDATA[]]></content>
    <summary type="html">
    <![CDATA[]]>
    </summary>
    
      <category term="blog" scheme="http://yoursite.com/categories/blog/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Poetry Form Checker(诗歌形式检测小程序)]]></title>
    <link href="http://yoursite.com/2015/01/22/Poetry-Form-Checker-%E8%AF%97%E6%AD%8C%E5%BD%A2%E5%BC%8F%E6%A3%80%E6%B5%8B%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    <id>http://yoursite.com/2015/01/22/Poetry-Form-Checker-诗歌形式检测小程序/</id>
    <published>2015-01-22T03:31:28.000Z</published>
    <updated>2015-01-22T08:55:57.000Z</updated>
    <content type="html"><![CDATA[<p> Poetry Form Checker</p>
<p>Limericks, sonnets, haiku, and other forms of poetry each follow prescribed patterns that give the number of lines, the number of syllables on each line, and a rhyme scheme. For example, limericks are five lines long; the first, second, and fifth lines each have eight syllables and rhyme with each other; and the third and fourth lines each have five syllables and rhyme with each other. (There are additional rules about the location and number of stressed vs. unstressed syllables, but we’ll ignore those rules for this assignment.)<a id="more"></a></p>
<p>Here is a stupendous work of limerick art:</p>
<pre><code>I wish I had thought <span class="keyword">of</span> a rhyme
Before I ran <span class="keyword">all</span> <span class="keyword">out</span> <span class="keyword">of</span> <span class="typename">time</span>!
I<span class="attribute">'ll</span> sit here instead,
A cloud <span class="keyword">on</span> my head
That rains <span class="attribute">'til</span> I<span class="attribute">'m</span> covered <span class="keyword">with</span> slime.
</code></pre><p>We’re sure that you’ve all kept yourselves awake wondering if there was a way to have a computer program check whether a poem is a limerick or if it follows some other poetry pattern. Here’s your chance to resolve the question!<br>The CMU Pronouncing Dictionary</p>
<p>The Carnegie Mellon University Pronouncing Dictionary describes how to pronounce words. Head there now and look up a couple of words; try searching for words like “Daniel”, “is”, and “goofy”, and see if you can interpret the results. Do contractions like “I’ll” (short for “I will”) and “we’ll” (short for “we will”) work? Try clicking the “Show Lexical Stress” checkbox too, and see how that changes the result.</p>
<p>Here is the output for “Daniel” (with “Show Lexical Stress” turned on): D AE1 N Y AH0 L. Each of the separate pieces describes a sound; these pieces are called phonemes. The phonemes are either vowel sounds or consonant sounds, and they are from a project called Arpabet that was created by the Advanced Research Projects Agency (ARPA) back in the 1970’s. The vowel phonemes all have a number after them; these indicate a level of stress. For example, in “Daniel”, the stress falls on the first vowel, AE1, and the second vowel is unstressed, AH0. The higher the level of stress, the larger the number after the vowel phoneme. In the CMU Pronouncing Dictionary, stress is always on a vowel sound.</p>
<p>Your program will read the file dictionary.txt, which is our version of the Pronouncing Dictionary. You must use this file, not any files from the CMU website. Take a look at our dictionary.txt file to see the format; notice that any line beginning with ;;; is a comment and not part of the dictionary.</p>
<p>Notice that the words in dictionary.txt are all uppercase and that they do not contain surrounding punctuation. When your program looks up a word, use the uppercase form, with no leading or trailing punctuation. Function clean_up in the starter code file poetry_functions.py will be be helpful here. </p>
]]></content>
    <summary type="html">
    <![CDATA[<p> Poetry Form Checker</p>
<p>Limericks, sonnets, haiku, and other forms of poetry each follow prescribed patterns that give the number of lines, the number of syllables on each line, and a rhyme scheme. For example, limericks are five lines long; the first, second, and fifth lines each have eight syllables and rhyme with each other; and the third and fourth lines each have five syllables and rhyme with each other. (There are additional rules about the location and number of stressed vs. unstressed syllables, but we’ll ignore those rules for this assignment.)]]>
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="小程序" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="python小程序" scheme="http://yoursite.com/categories/python%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[第一篇文章--哈哈]]></title>
    <link href="http://yoursite.com/2015/01/19/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0-%E5%93%88%E5%93%88/"/>
    <id>http://yoursite.com/2015/01/19/第一篇文章-哈哈/</id>
    <published>2015-01-19T08:28:00.000Z</published>
    <updated>2015-01-22T08:55:05.000Z</updated>
    <content type="html"><![CDATA[<hr>
<p>今天,2015年1月20日，终于实现了魂牵梦绕的的梦想，在<strong><a href="http://zhanfang.github.io/" target="_blank" rel="external">詹神</a>和<a href="http://dby.github.io/" target="_blank" rel="external">杜少</a></strong>的帮助下（哈哈，特别感谢一下），用<strong>hexo</strong>在github上搭建了个博客!<br>我在coding网的主页：<a href="https://coding.net/u/paradise" target="_blank" rel="external">paradise</a>.<br>感谢<a href="http://zipperary.com/categories/hexo/" target="_blank" rel="external">Zippera’s blog的hexo教程</a>.<a id="more"></a></p>
<h2 id="1_一首小诗">1 一首小诗</h2>
<hr>
<p><strong>《豁然开朗》</strong> —<em>丰子恺</em><br>你若爱，<br>生活哪里都可爱；<br>你若恨，<br>生活哪里都可恨；<br>你若感恩，<br>处处可感恩；<br>你若成长，<br>事事可成长。<br>不是世界选择了你，<br>是你选择了这个世界。<br>既然无处可躲，<br>不如傻乐；<br>既然无处可逃，<br>不如喜悦；<br>既然没有净土，<br>不如静心；<br>既然没有如愿，<br>不如释然。</p>
<hr>
<h2 id="2_昨天">2 昨天</h2>
<hr>
<p>昨天，和昊哥和聪哥打了好多把dota，<strong>十几分钟被围着高地打，最后沙王和幽鬼竟然能翻盘，我必须提一下，真是珍贵的回忆！！！</strong>特别开心，游戏我总是删了又装，装了玩几次又删。真是希望以后我可以少打游戏，多学习，<strong>提升一下自身价值的稀有性，转化为好的价格</strong>，说俗一点就是<strong>提升逼格，赚钱养家</strong>。想在这个博客写点<strong>leetcode</strong>，将来希望找个好工作，能过上自己希望的生活吧。</p>
<p>哎，生活总有不如意，我也有好多需要妥协的地方，可是就像《时空恋旅人》电影里的一句歌词一样，<strong><em>Maybe it’s the perfect day.</em></strong>再不如意的一天，也可能是最好的一天，所以要<strong>乐观，要热爱生活</strong>。</p>
<p>祝好朋友们健康快乐。第一篇文章，哈哈，开心!</p>
]]></content>
    <summary type="html">
    <![CDATA[<hr>
<p>今天,2015年1月20日，终于实现了魂牵梦绕的的梦想，在<strong><a href="http://zhanfang.github.io/" target="_blank" rel="external">詹神</a>和<a href="http://dby.github.io/" target="_blank" rel="external">杜少</a></strong>的帮助下（哈哈，特别感谢一下），用<strong>hexo</strong>在github上搭建了个博客!<br>我在coding网的主页：<a href="https://coding.net/u/paradise" target="_blank" rel="external">paradise</a>.<br>感谢<a href="http://zipperary.com/categories/hexo/" target="_blank" rel="external">Zippera’s blog的hexo教程</a>.]]>
    
    </summary>
    
      <category term="生活感悟" scheme="http://yoursite.com/tags/%E7%94%9F%E6%B4%BB%E6%84%9F%E6%82%9F/"/>
    
      <category term="生活" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
</feed>
